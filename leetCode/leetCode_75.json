[
    {
        "problemsName": " 3701.训练计划 I",
        "hardRate": "EASY",
        "passRate": "65.07%",
        "problemsUrl": "https://leetcode.cn/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/solution",
        "problemsDesc": "<p>教练使用整数数组 <code>actions</code> 记录一系列核心肌群训练项目编号。为增强训练趣味性，需要将所有奇数编号训练项目调整至偶数编号训练项目之前。请将调整后的训练项目编号以 <strong>数组</strong> 形式返回。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>actions = [1,2,3,4,5]\n<strong>输出：</strong>[1,3,5,2,4] \n<strong>解释：</strong>为正确答案之一</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= actions.length &lt;= 50000</code></li>\n\t<li><code>0 &lt;= actions[i] &lt;= 10000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3702.训练计划 II",
        "hardRate": "EASY",
        "passRate": "79.39%",
        "problemsUrl": "https://leetcode.cn/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/solution",
        "problemsDesc": "<p>给定一个头节点为 <code>head</code> 的链表用于记录一系列核心肌群训练项目编号，请查找并返回倒数第 <code>cnt</code> 个训练项目编号。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>head = [2,4,7,8], cnt = 1\n<strong>输出：</strong>8</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= head.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= head[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= cnt &lt;= head.length</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3703.训练计划 III",
        "hardRate": "EASY",
        "passRate": "74.15%",
        "problemsUrl": "https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/solution",
        "problemsDesc": "<p>给定一个头节点为 <code>head</code> 的单链表用于记录一系列核心肌群训练编号，请将该系列训练编号 <strong>倒序</strong> 记录于链表并返回。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>head = [1,2,3,4,5]\n<strong>输出：</strong>[5,4,3,2,1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>head = [1,2]\n<strong>输出：</strong>[2,1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>head = []\n<strong>输出：</strong>[]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>链表中节点的数目范围是 <code>[0, 5000]</code></li>\n\t<li><code>-5000 &lt;= Node.val &lt;= 5000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>注意</strong>：本题与主站 206 题相同：<a href=\"https://leetcode-cn.com/problems/reverse-linked-list/\">https://leetcode-cn.com/problems/reverse-linked-list/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3704.训练计划 IV",
        "hardRate": "EASY",
        "passRate": "71.82%",
        "problemsUrl": "https://leetcode.cn/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/solution",
        "problemsDesc": "<p>给定两个以 <strong>有序链表</strong> 形式记录的训练计划 <code>l1</code>、<code>l2</code>，分别记录了两套核心肌群训练项目编号，请合并这两个训练计划，按训练项目编号 <strong>升序</strong> 记录于链表并返回。</p>\n\n<p><strong>注意</strong>：新链表是通过拼接给定的两个链表的所有节点组成的。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>l1 = [1,2,4], l2 = [1,3,4]\n<strong>输出：</strong>[1,1,2,3,4,4]</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>l1 = [], l2 = []\n<strong>输出：</strong>[]</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>l1 = [], l2 = [0]\n<strong>输出：</strong>[0]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<p><code>0 &lt;= 链表长度 &lt;= 1000</code></p>\n\n<p>&nbsp;</p>\n\n<p>注意：本题与主站 21 题相同：<a href=\"https://leetcode-cn.com/problems/merge-two-sorted-lists/\">https://leetcode-cn.com/problems/merge-two-sorted-lists/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3705.子结构判断",
        "hardRate": "MEDIUM",
        "passRate": "46.35%",
        "problemsUrl": "https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof/solution",
        "problemsDesc": "<p>给定两棵二叉树 <code>tree1</code> 和 <code>tree2</code>，判断 <code>tree2</code> 是否以 <code>tree1</code> 的某个节点为根的子树具有 <strong>相同的结构和节点值</strong> 。<br />\n注意，<strong>空树&nbsp;</strong>不会是以 <code>tree1</code> 的某个节点为根的子树具有 <strong>相同的结构和节点值</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694684670-vwyIgY-two_tree.png\" /></p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>输入：</strong>tree1 = [1,7,5], tree2 = [6,1]\n<strong>输出：</strong>false\n<strong>解释：</strong>tree2 与 tree1 的一个子树没有相同的结构和节点值。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694685602-myWXCv-two_tree_2.png\" /></p>\n\n<pre>\n<strong>输入：</strong>tree1 = [3,6,7,1,8], tree2 = [6,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>tree2 与 tree1 的一个子树拥有相同的结构和节点值。即 6 - &gt; 1。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<p><code>0 &lt;= 节点个数 &lt;= 10000</code></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3706.翻转二叉树",
        "hardRate": "EASY",
        "passRate": "79.40%",
        "problemsUrl": "https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof/solution",
        "problemsDesc": "<p>给定一棵二叉树的根节点 <code>root</code>，请左右翻转这棵二叉树，并返回其根节点。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694686821-qlvjod-%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91.png\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [5,7,9,8,3,2,4]\n<strong>输出：</strong>[5,9,7,4,2,3,8]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>树中节点数目范围在 <code>[0, 100]</code> 内</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>注意：本题与主站 226 题相同：<a href=\"https://leetcode-cn.com/problems/invert-binary-tree/\">https://leetcode-cn.com/problems/invert-binary-tree/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3707.判断对称二叉树",
        "hardRate": "EASY",
        "passRate": "57.67%",
        "problemsUrl": "https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof/solution",
        "problemsDesc": "<p>请设计一个函数判断一棵二叉树是否 <strong>轴对称</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694689008-JaaRdV-%E8%BD%B4%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%911.png\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [6,7,7,8,9,9,8]\n<strong>输出：</strong>true\n<strong>解释：</strong>从图中可看出树是轴对称的。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694689054-vENzHe-%E8%BD%B4%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%912.png\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,2,2,null,3,null,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>从图中可看出最后一层的节点不对称。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<p><code>0 &lt;= 节点个数 &lt;= 1000</code></p>\n\n<p>注意：本题与主站 101 题相同：<a href=\"https://leetcode-cn.com/problems/symmetric-tree/\">https://leetcode-cn.com/problems/symmetric-tree/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3708.螺旋遍历二维数组",
        "hardRate": "EASY",
        "passRate": "41.96%",
        "problemsUrl": "https://leetcode.cn/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/solution",
        "problemsDesc": "<p>给定一个二维数组 <code>array</code>，请返回「<strong>螺旋遍历</strong>」该数组的结果。</p>\n\n<p><strong>螺旋遍历</strong>：从左上角开始，按照 <strong>向右</strong>、<strong>向下</strong>、<strong>向左</strong>、<strong>向上</strong> 的顺序 <strong>依次</strong> 提取元素，然后再进入内部一层重复相同的步骤，直到提取完所有元素。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>array = [[1,2,3],[8,9,4],[7,6,5]]\n<strong>输出：</strong>[1,2,3,4,5,6,7,8,9]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>array &nbsp;= [[1,2,3,4],[12,13,14,5],[11,16,15,6],[10,9,8,7]]\n<strong>输出：</strong>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>限制：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= array.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= array[i].length &lt;= 100</code></li>\n</ul>\n\n<p>注意：本题与主站 54 题相同：<a href=\"https://leetcode-cn.com/problems/spiral-matrix/\">https://leetcode-cn.com/problems/spiral-matrix/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3709.最小栈",
        "hardRate": "EASY",
        "passRate": "55.36%",
        "problemsUrl": "https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof/solution",
        "problemsDesc": "<p>请你设计一个 <strong>最小栈</strong> 。它提供 <code>push</code> ，<code>pop</code> ，<code>top</code> 操作，并能在常数时间内检索到最小元素的栈。</p>\n\n<p>&nbsp;</p>\n\n<p>实现 <code>MinStack</code> 类:</p>\n\n<ul>\n\t<li><code>MinStack()</code> 初始化堆栈对象。</li>\n\t<li><code>void push(int val)</code> 将元素val推入堆栈。</li>\n\t<li><code>void pop()</code> 删除堆栈顶部的元素。</li>\n\t<li><code>int top()</code> 获取堆栈顶部的元素。</li>\n\t<li><code>int getMin()</code> 获取堆栈中的最小元素。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\n<strong>输出：</strong>\n[null,null,null,null,-3,null,0,-2]\n\n<strong>解释：</strong>\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(2);\nminStack.push(-3);\nminStack.getMin(); &nbsp; --&gt; 返回 -3.\nminStack.pop();\nminStack.top(); &nbsp; &nbsp; &nbsp;--&gt; 返回 0.\nminStack.getMin(); &nbsp; --&gt; 返回 -2.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>&nbsp;<br />\n提示：</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>pop</code>、<code>top</code> 和 <code>getMin</code> 操作总是在 <strong>非空栈</strong> 上调用</li>\n\t<li><code>push</code>、<code>pop</code>、<code>top</code> 和 <code>getMin</code> 最多被调用 <code>3 * 10<sup>4</sup></code> 次</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>注意：本题与主站 155 题相同：<a href=\"https://leetcode-cn.com/problems/min-stack/\">https://leetcode-cn.com/problems/min-stack/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3710.验证图书取出顺序",
        "hardRate": "MEDIUM",
        "passRate": "61.12%",
        "problemsUrl": "https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof/solution",
        "problemsDesc": "<p>现在图书馆有一堆图书需要放入书架，并且图书馆的书架是一种特殊的数据结构，只能按照 <strong>一定</strong> 的顺序 <strong>放入</strong> 和 <strong>拿取</strong> 书籍。</p>\n\n<p>给定一个表示图书放入顺序的整数序列 <code>putIn</code>，请判断序列 <code>takeOut</code> 是否为按照正确的顺序拿取书籍的操作序列。你可以假设放入书架的所有书籍编号都不相同。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>putIn = [6,7,8,9,10,11], takeOut = [9,11,10,8,7,6]\n<strong>输出：</strong>true\n<strong>解释：</strong>我们可以按以下操作放入并拿取书籍：\npush(6), push(7), push(8), push(9), pop() -&gt; 9,\npush(10), push(11),pop() -&gt; 11,pop() -&gt; 10, pop() -&gt; 8, pop() -&gt; 7, pop() -&gt; 6\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>putIn = [6,7,8,9,10,11], takeOut = [11,9,8,10,6,7]\n<strong>输出：</strong>false\n<strong>解释：</strong>6 不能在 7 之前取出。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= putIn.length == takeOut.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= putIn[i], takeOut &lt; 1000</code></li>\n\t<li><code>putIn</code> 是 <code>takeOut</code> 的排列。</li>\n</ul>\n\n<p>注意：本题与主站 946 题相同：<a href=\"https://leetcode-cn.com/problems/validate-stack-sequences/\">https://leetcode-cn.com/problems/validate-stack-sequences/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3711.彩灯装饰记录 I",
        "hardRate": "MEDIUM",
        "passRate": "63.00%",
        "problemsUrl": "https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/solution",
        "problemsDesc": "<p>一棵圣诞树记作根节点为 <code>root</code> 的二叉树，节点值为该位置装饰彩灯的颜色编号。请按照从 <strong>左</strong> 到 <strong>右</strong> 的顺序返回每一层彩灯编号。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694758674-XYrUiV-%E5%89%91%E6%8C%87%20Offer%2032%20-%20I_%E7%A4%BA%E4%BE%8B1.png\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [8,17,21,18,null,null,6]\n<strong>输出：</strong>[8,17,21,18,6]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>节点总数 &lt;= 1000</code></li>\n</ol>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3712.彩灯装饰记录 II",
        "hardRate": "EASY",
        "passRate": "68.76%",
        "problemsUrl": "https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/solution",
        "problemsDesc": "<p>一棵圣诞树记作根节点为 <code>root</code> 的二叉树，节点值为该位置装饰彩灯的颜色编号。请按照从左到右的顺序返回每一层彩灯编号，每一层的结果记录于一行。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694758674-XYrUiV-%E5%89%91%E6%8C%87%20Offer%2032%20-%20I_%E7%A4%BA%E4%BE%8B1.png\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [8,17,21,18,null,null,6]\n<strong>输出：</strong>[[8],[17,21],[18,6]]\n</pre>\n\n<p><strong>提示：</strong></p>\n\n<ol>\n\t<li><code>节点总数 &lt;= 1000</code></li>\n</ol>\n\n<p>注意：本题与主站 102 题相同：<a href=\"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/\">https://leetcode-cn.com/problems/binary-tree-level-order-traversal/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3713.彩灯装饰记录 III",
        "hardRate": "MEDIUM",
        "passRate": "58.22%",
        "problemsUrl": "https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/solution",
        "problemsDesc": "<p>一棵圣诞树记作根节点为 <code>root</code> 的二叉树，节点值为该位置装饰彩灯的颜色编号。请按照如下规则记录彩灯装饰结果：</p>\n\n<ul>\n\t<li>第一层按照从左到右的顺序记录</li>\n\t<li>除第一层外每一层的记录顺序均与上一层相反。即第一层为从左到右，第二层为从右到左。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694758674-XYrUiV-%E5%89%91%E6%8C%87%20Offer%2032%20-%20I_%E7%A4%BA%E4%BE%8B1.png\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [8,17,21,18,null,null,6]\n<strong>输出：</strong>[[8],[21,17],[18,6]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>节点总数 &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3714.验证二叉搜索树的后序遍历序列",
        "hardRate": "MEDIUM",
        "passRate": "57.02%",
        "problemsUrl": "https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/solution",
        "problemsDesc": "<p>请实现一个函数来判断整数数组 <code>postorder</code> 是否为二叉搜索树的后序遍历结果。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1706665328-rfvWhs-%E6%88%AA%E5%B1%8F2024-01-31%2009.41.48.png\" style=\"width: 300px; height: 279px;\" /></p>\n\n<pre>\n<strong>输入: </strong>postorder = [4,9,6,5,8]\n<strong>输出: </strong>false \n<strong>解释：</strong>从上图可以看出这不是一颗二叉搜索树\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1694762510-vVpTic-%E5%89%91%E6%8C%8733.png\" /></p>\n\n<pre>\n<strong>输入: </strong>postorder = [4,6,5,9,8]\n<strong>输出: </strong>true \n<strong>解释：</strong>可构建的二叉搜索树如上图\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>数组长度 &lt;= 1000</code></li>\n\t<li><code>postorder</code> 中无重复数字</li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3715.二叉树中和为目标值的路径",
        "hardRate": "MEDIUM",
        "passRate": "59.22%",
        "problemsUrl": "https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof/solution",
        "problemsDesc": "<p>给你二叉树的根节点 <code>root</code> 和一个整数目标和 <code>targetSum</code> ，找出所有 <strong>从根节点到叶子节点</strong> 路径总和等于给定目标和的路径。</p>\n\n<p><strong>叶子节点</strong> 是指没有子节点的节点。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsumii1.jpg\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\n<strong>输出：</strong>[[5,4,11,2],[5,8,4,5]]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,2,3], targetSum = 5\n<strong>输出：</strong>[]\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = [1,2], targetSum = 0\n<strong>输出：</strong>[]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>树中节点总数在范围 <code>[0, 5000]</code> 内</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= targetSum &lt;= 1000</code></li>\n</ul>\n\n<p>注意：本题与主站 113&nbsp;题相同：<a href=\"https://leetcode-cn.com/problems/path-sum-ii/\">https://leetcode-cn.com/problems/path-sum-ii/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3716.复杂链表的复制",
        "hardRate": "MEDIUM",
        "passRate": "71.48%",
        "problemsUrl": "https://leetcode.cn/problems/fu-za-lian-biao-de-fu-zhi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/fu-za-lian-biao-de-fu-zhi-lcof/solution",
        "problemsDesc": "<p>请实现 <code>copyRandomList</code> 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 <code>next</code> 指针指向下一个节点，还有一个 <code>random</code> 指针指向链表中的任意节点或者 <code>null</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/09/e1.png\"></p>\n\n<pre><strong>输入：</strong>head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n<strong>输出：</strong>[[7,null],[13,0],[11,4],[10,2],[1,0]]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/09/e2.png\"></p>\n\n<pre><strong>输入：</strong>head = [[1,1],[2,1]]\n<strong>输出：</strong>[[1,1],[2,1]]\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/09/e3.png\"></strong></p>\n\n<pre><strong>输入：</strong>head = [[3,null],[3,0],[3,null]]\n<strong>输出：</strong>[[3,null],[3,0],[3,null]]\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>head = []\n<strong>输出：</strong>[]\n<strong>解释：</strong>给定的链表为空（空指针），因此返回 null。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>-10000 &lt;= Node.val &lt;= 10000</code></li>\n\t<li><code>Node.random</code>&nbsp;为空（null）或指向链表中的节点。</li>\n\t<li>节点数目不超过 1000 。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>注意：</strong>本题与主站 138 题相同：<a href=\"https://leetcode-cn.com/problems/copy-list-with-random-pointer/\">https://leetcode-cn.com/problems/copy-list-with-random-pointer/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3717.将二叉搜索树转化为排序的双向链表",
        "hardRate": "MEDIUM",
        "passRate": "65.30%",
        "problemsUrl": "https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof/solution",
        "problemsDesc": "<p>将一个 <strong>二叉搜索树</strong> 就地转化为一个 <strong>已排序的双向循环链表</strong> 。</p>\n\n<p>对于双向循环列表，你可以将左右孩子指针作为双向循环链表的前驱和后继指针，第一个节点的前驱是最后一个节点，最后一个节点的后继是第一个节点。</p>\n\n<p>特别地，我们希望可以 <strong>就地</strong> 完成转换操作。当转化完成以后，树中节点的左指针需要指向前驱，树中节点的右指针需要指向后继。还需要返回链表中最小元素的指针。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = [4,2,5,1,3] \n\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/bstdllreturndll.png\" />\n<strong>输出：</strong>[1,2,3,4,5]\n\n<strong>解释：</strong>下图显示了转化后的二叉搜索树，实线表示后继关系，虚线表示前驱关系。\n<img src=\"https://assets.leetcode.com/uploads/2018/10/12/bstdllreturnbst.png\" />\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = [2,1,3]\n<strong>输出：</strong>[1,2,3]\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = []\n<strong>输出：</strong>[]\n<strong>解释：</strong>输入是空树，所以输出也是空链表。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = [1]\n<strong>输出：</strong>[1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n\t<li><code>Node.left.val &lt; Node.val &lt; Node.right.val</code></li>\n\t<li><code>Node.val</code> 的所有值都是独一无二的</li>\n\t<li><code>0 &lt;= Number of Nodes &lt;= 2000</code></li>\n</ul>\n\n<p>注意：本题与主站 426 题相同：<a href=\"https://leetcode-cn.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/\" rel=\"noopener noreferrer\" target=\"_blank\">https://leetcode-cn.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/</a></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3718.序列化与反序列化二叉树",
        "hardRate": "HARD",
        "passRate": "57.37%",
        "problemsUrl": "https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof/solution",
        "problemsDesc": "<p>序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方式重构得到原数据。</p>\n\n<p>请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。</p>\n\n<p><strong>提示: </strong>输入输出格式与 LeetCode 目前使用的方式一致，详情请参阅&nbsp;<a href=\"/faq/#binary-tree\">LeetCode 序列化二叉树的格式</a>。你并非必须采取这种方式，你也可以采用其他的方法解决这个问题。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/serdeser.jpg\" />\n<pre>\n<strong>输入：</strong>root = [1,2,3,null,null,4,5]\n<strong>输出：</strong>[1,2,3,null,null,4,5]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = []\n<strong>输出：</strong>[]\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = [1]\n<strong>输出：</strong>[1]\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = [1,2]\n<strong>输出：</strong>[1,2]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>树中结点数在范围 <code>[0, 10<sup>4</sup>]</code> 内</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n\n<p>注意：本题与主站 297 题相同：<a href=\"https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/\">https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/</a></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3719.套餐内商品的排列顺序",
        "hardRate": "MEDIUM",
        "passRate": "57.28%",
        "problemsUrl": "https://leetcode.cn/problems/zi-fu-chuan-de-pai-lie-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/zi-fu-chuan-de-pai-lie-lcof/solution",
        "problemsDesc": "<p>某店铺将用于组成套餐的商品记作字符串 <code>goods</code>，其中 <code>goods[i]</code> 表示对应商品。请返回该套餐内所含商品的 <strong>全部排列方式</strong> 。</p>\n\n<p>返回结果 <strong>无顺序要求</strong>，但不能含有重复的元素。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>goods = \"agew\"\n<strong>输出：</strong>[\"aegw\",\"aewg\",\"agew\",\"agwe\",\"aweg\",\"awge\",\"eagw\",\"eawg\",\"egaw\",\"egwa\",\"ewag\",\"ewga\",\"gaew\",\"gawe\",\"geaw\",\"gewa\",\"gwae\",\"gwea\",\"waeg\",\"wage\",\"weag\",\"wega\",\"wgae\",\"wgea\"]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= goods.length &lt;= 8</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3720.库存管理 II",
        "hardRate": "EASY",
        "passRate": "69.80%",
        "problemsUrl": "https://leetcode.cn/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof/solution",
        "problemsDesc": "<p>仓库管理员以数组 <code>stock</code> 形式记录商品库存表。<code>stock[i]</code> 表示商品 <code>id</code>，可能存在重复。请返回库存表中数量大于 <code>stock.length / 2</code> 的商品 <code>id</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stock = [6, 1, 3, 1, 1, 1]\n<strong>输出：</strong>1</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stock.length &lt;= 50000</code></li>\n\t<li>给定数组为非空数组，且存在结果数字</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>注意：本题与主站 169 题相同：<a href=\"https://leetcode-cn.com/problems/majority-element/\">https://leetcode-cn.com/problems/majority-element/</a></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3721.库存管理 III",
        "hardRate": "EASY",
        "passRate": "57.75%",
        "problemsUrl": "https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof/solution",
        "problemsDesc": "<p>仓库管理员以数组 <code>stock</code> 形式记录商品库存表，其中 <code>stock[i]</code> 表示对应商品库存余量。请返回库存余量最少的 <code>cnt</code> 个商品余量，返回&nbsp;<strong>顺序不限</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stock = [2,5,7,4], cnt = 1\n<strong>输出：</strong>[2]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stock = [0,2,3,6], cnt = 2\n<strong>输出：</strong>[0,2] 或 [2,0]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= cnt &lt;= stock.length &lt;= 10000<br />\n\t0 &lt;= stock[i] &lt;= 10000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3722.数据流中的中位数",
        "hardRate": "HARD",
        "passRate": "58.17%",
        "problemsUrl": "https://leetcode.cn/problems/shu-ju-liu-zhong-de-zhong-wei-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shu-ju-liu-zhong-de-zhong-wei-shu-lcof/solution",
        "problemsDesc": "<p><strong>中位数&nbsp;</strong>是有序整数列表中的中间值。如果列表的大小是偶数，则没有中间值，中位数是两个中间值的平均值。</p>\n\n<p>例如，<br />\n<code>[2,3,4]</code> 的中位数是 <code>3</code><br />\n<code>[2,3]</code> 的中位数是 <code>(2 + 3) / 2 = 2.5</code><br />\n设计一个支持以下两种操作的数据结构：</p>\n\n<ul>\n\t<li><code>void addNum(int num)</code> - 从数据流中添加一个整数到数据结构中。</li>\n\t<li><code>double findMedian()</code> - 返回目前所有元素的中位数。</li>\n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：\n</strong>[\"MedianFinder\",\"addNum\",\"addNum\",\"findMedian\",\"addNum\",\"findMedian\"]\n[[],[1],[2],[],[3],[]]\n<strong>输出：</strong>[null,null,null,1.50000,null,2.00000]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：\n</strong>[\"MedianFinder\",\"addNum\",\"findMedian\",\"addNum\",\"findMedian\"]\n[[],[2],[],[3],[]]\n<strong>输出：</strong>[null,null,2.00000,null,2.50000]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>最多会对&nbsp;<code>addNum、findMedian</code> 进行&nbsp;<code>50000</code>&nbsp;次调用。</li>\n</ul>\n\n<p>注意：本题与主站 295 题相同：<a href=\"https://leetcode-cn.com/problems/find-median-from-data-stream/\">https://leetcode-cn.com/problems/find-median-from-data-stream/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3723.连续天数的最高销售额",
        "hardRate": "EASY",
        "passRate": "59.99%",
        "problemsUrl": "https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/solution",
        "problemsDesc": "<p>某公司每日销售额记于整数数组 <code>sales</code>，请返回所有 <strong>连续</strong> 一或多天销售额总和的最大值。</p>\n\n<p>要求实现时间复杂度为 <code>O(n)</code> 的算法。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>sales = [-2,1,-3,4,-1,2,1,-5,4]\n<strong>输出：</strong>6\n<strong>解释：</strong>[4,-1,2,1] 此连续四天的销售总额最高，为 6。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>sales = [5,4,-1,7,8]\n<strong>输出：</strong>23\n<strong>解释：</strong>[5,4,-1,7,8] 此连续五天的销售总额最高，为 23。&nbsp;</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;arr.length &lt;= 10^5</code></li>\n\t<li><code>-100 &lt;= arr[i] &lt;= 100</code></li>\n</ul>\n\n<p>注意：本题与主站 53 题相同：<a href=\"https://leetcode-cn.com/problems/maximum-subarray/\">https://leetcode-cn.com/problems/maximum-subarray/</a></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3724.数字 1 的个数",
        "hardRate": "HARD",
        "passRate": "50.37%",
        "problemsUrl": "https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/solution",
        "problemsDesc": "<p>给定一个整数 <code>num</code>，计算所有小于等于 <code>num</code> 的非负整数中数字 <code>1</code> 出现的个数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 0\n<strong>输出：</strong>0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 13\n<strong>输出：</strong>6</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt; 10<sup>9</sup></code></li>\n</ul>\n\n<p>注意：本题与主站 233 题相同：<a href=\"https://leetcode-cn.com/problems/number-of-digit-one/\">https://leetcode-cn.com/problems/number-of-digit-one/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3725.找到第 k 位数字",
        "hardRate": "MEDIUM",
        "passRate": "43.09%",
        "problemsUrl": "https://leetcode.cn/problems/shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof/solution",
        "problemsDesc": "<p>某班级学号记录系统发生错乱，原整数学号序列 <code>[1,2,3,4,...]</code> 分隔符丢失后变为 <code>1234...</code> 的字符序列。请实现一个函数返回该字符序列中的第 <code>k</code> 位数字。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>k = 5\n<strong>输出：</strong>5\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>k = 12\n<strong>输出：</strong>1\n<strong>解释：</strong>第 12 位数字在序列 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... 里是 1 ，它是 11 的一部分。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= k &lt;&nbsp;2<sup>31</sup></code></li>\n</ul>\n\n<p>注意：本题与主站 400 题相同：<a href=\"https://leetcode-cn.com/problems/nth-digit/\">https://leetcode-cn.com/problems/nth-digit/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3726.破解闯关密码",
        "hardRate": "MEDIUM",
        "passRate": "54.75%",
        "problemsUrl": "https://leetcode.cn/problems/ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof/solution",
        "problemsDesc": "<p>闯关游戏需要破解一组密码，闯关组给出的有关密码的线索是：</p>\n\n<ul>\n\t<li>一个拥有密码所有元素的非负整数数组 <code>password</code></li>\n\t<li>密码是 <code>password</code> 中所有元素拼接后得到的最小的一个数</li>\n</ul>\n\n<p>请编写一个程序返回这个密码。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>password = [15, 8, 7]\n<strong>输出：</strong>\"1578\"</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre>\n<strong>输入：</strong>password = [0, 3, 30, 34, 5, 9]\n<strong>输出：</strong>\"03033459\"</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt; password.length &lt;= 100</code></li>\n</ul>\n\n<p><strong>说明: </strong></p>\n\n<ul>\n\t<li>输出结果可能非常大，所以你需要返回一个字符串而不是整数</li>\n\t<li>拼接起来的数字可能会有前导 0，最后结果不需要去掉前导 0</li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3727.解密数字",
        "hardRate": "MEDIUM",
        "passRate": "51.08%",
        "problemsUrl": "https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/solution",
        "problemsDesc": "<p>现有一串神秘的密文 <code>ciphertext</code>，经调查，密文的特点和规则如下：</p>\n\n<ul>\n\t<li>密文由非负整数组成</li>\n\t<li>数字 0-25 分别对应字母 a-z</li>\n</ul>\n\n<p>请根据上述规则将密文 <code>ciphertext</code> 解密为字母，并返回共有多少种解密结果。</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>ciphertext = 216612\n<strong>输出：</strong><code>6\n</code><strong>解释：</strong>216612 解密后有 6 种不同的形式，分别是 \"cbggbc\"，\"vggbc\"，\"vggm\"，\"cbggm\"，\"cqgbc\" 和 \"cqgm\" </pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= ciphertext &lt; 2<sup>31</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3728.珠宝的最高价值",
        "hardRate": "MEDIUM",
        "passRate": "69.35%",
        "problemsUrl": "https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof/solution",
        "problemsDesc": "<p>现有一个记作二维矩阵 <code>frame</code> 的珠宝架，其中 <code>frame[i][j]</code> 为该位置珠宝的价值。拿取珠宝的规则为：</p>\n\n<ul>\n\t<li>只能从架子的左上角开始拿珠宝</li>\n\t<li>每次可以移动到右侧或下侧的相邻位置</li>\n\t<li>到达珠宝架子的右下角时，停止拿取</li>\n</ul>\n\n<p>注意：珠宝的价值都是大于 0 的。除非这个架子上没有任何珠宝，比如 <code>frame = [[0]]</code>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>frame = [[1,3,1],[1,5,1],[4,2,1]]\n<strong>输出：</strong><code>12\n</code><strong>解释：</strong>路径 1→3→5→2→1 可以拿到最高价值的珠宝</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt; frame.length &lt;= 200</code></li>\n\t<li><code>0 &lt; frame[0].length &lt;= 200</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3729.招式拆解 I",
        "hardRate": "MEDIUM",
        "passRate": "46.00%",
        "problemsUrl": "https://leetcode.cn/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/solution",
        "problemsDesc": "<p>某套连招动作记作序列 <code>arr</code>，其中 <code>arr[i]</code> 为第 <code>i</code> 个招式的名字。请返回 <code>arr</code> 中最多可以出连续不重复的多少个招式。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = \"dbascDdad\"\n<strong>输出：</strong>6\n<strong>解释：</strong>因为连续且最长的招式序列是 \"dbascD\" 或 \"bascDd\"，所以其长度为 6。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = \"KKK\"\n<strong>输出：</strong>1\n<strong>解释：</strong>因为无重复字符的最长子串是 <code>\"K\"</code>，所以其长度为 1。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = \"pwwkew\"\n<strong>输出：</strong>3\n<strong>解释：</strong>因为连续且最长的招式序列是 \"wke\"，所以其长度为 3。&nbsp;    \n请注意区分 <strong>子串</strong> 与 <strong>子序列</strong> 的概念：你的答案必须是 <strong>连续招式</strong> 的长度，也就是 <strong>子串</strong>。而 \"pwke\" 是一个非连续的 <strong>子序列</strong>，不是 <strong>子串</strong>。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= arr.length &lt;= 40000</code></li>\n\t<li><code>arr</code> 由英文字母、数字、符号和空格组成。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>注意：本题与主站 3 题相同：<a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/\">https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3730.丑数",
        "hardRate": "MEDIUM",
        "passRate": "64.13%",
        "problemsUrl": "https://leetcode.cn/problems/chou-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/chou-shu-lcof/solution",
        "problemsDesc": "<p>给你一个整数 <code>n</code> ，请你找出并返回第 <code>n</code> 个 丑数 。</p>\n\n<p><strong>说明：</strong>丑数是只包含质因数 2、3 和/或 5 的正整数；1 是丑数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 10\n<strong>输出:</strong> 12\n<strong>解释: </strong><code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> 是前 10 个丑数。</pre>\n\n<p><b>提示：</b>&nbsp;</p>\n\n<ul>\n\t<li><code>1 &lt;= n&nbsp;&lt;=<b>&nbsp;</b>1690</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>注意：本题与主站 264 题相同：<a href=\"https://leetcode-cn.com/problems/ugly-number-ii/\">https://leetcode-cn.com/problems/ugly-number-ii/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3731.招式拆解 II",
        "hardRate": "EASY",
        "passRate": "61.85%",
        "problemsUrl": "https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/solution",
        "problemsDesc": "<p>某套连招动作记作仅由小写字母组成的序列 <code>arr</code>，其中 <code>arr[i]</code> 第 <code>i</code> 个招式的名字。请返回第一个只出现一次的招式名称，如不存在请返回空格。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = \"abbccdeff\"\n<strong>输出：</strong>'a'\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>arr = \"ccdd\"\n<strong>输出：</strong>' '\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>限制：</strong></p>\n\n<p><code>0 &lt;= arr.length&nbsp;&lt;= 50000</code></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3732.交易逆序对的总数",
        "hardRate": "HARD",
        "passRate": "49.76%",
        "problemsUrl": "https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof/solution",
        "problemsDesc": "<p>在股票交易中，如果前一天的股价高于后一天的股价，则可以认为存在一个「交易逆序对」。请设计一个程序，输入一段时间内的股票交易记录 <code>record</code>，返回其中存在的「交易逆序对」总数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>record = [9, 7, 5, 4, 6]\n<strong>输出：</strong>8\n<strong>解释：</strong>交易中的逆序对为 (9, 7), (9, 5), (9, 4), (9, 6), (7, 5), (7, 4), (7, 6), (5, 4)。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<p><code>0 &lt;= record.length &lt;= 50000</code></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3733.训练计划 V",
        "hardRate": "EASY",
        "passRate": "65.39%",
        "problemsUrl": "https://leetcode.cn/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/solution",
        "problemsDesc": "<p>某教练同时带教两位学员，分别以链表 <code>l1</code>、<code>l2</code> 记录了两套核心肌群训练计划，节点值为训练项目编号。两套计划仅有前半部分热身项目不同，后续正式训练项目相同。请设计一个程序找出并返回第一个正式训练项目编号。如果两个链表不存在相交节点，返回 <code>null</code> 。</p>\n\n<p>如下面的两个链表<strong>：</strong></p>\n\n<p><a href=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png\" target=\"_blank\"><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png\" /></a></p>\n\n<p>在节点 <code>c1</code> 开始相交。</p>\n\n<p>输入说明：</p>\n\n<p><code>intersectVal</code> - 相交的起始节点的值。如果不存在相交节点，这一值为 0</p>\n\n<p><code>l1</code> - 第一个训练计划链表</p>\n\n<p><code>l2</code> - 第二个训练计划链表</p>\n\n<p><code>skip1</code> - 在 <code>l1</code> 中（从头节点开始）跳到交叉节点的节点数</p>\n\n<p><code>skip2</code> - 在 <code>l2</code> 中（从头节点开始）跳到交叉节点的节点数</p>\n\n<p>程序将根据这些输入创建链式数据结构，并将两个头节点 <code>head1</code> 和 <code>head2</code> 传递给你的程序。如果程序能够正确返回相交节点，那么你的解决方案将被视作正确答案 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><a href=\"https://assets.leetcode.com/uploads/2018/12/13/160_example_1.png\" target=\"_blank\"><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_1.png\" /></a></p>\n\n<pre>\n<strong>输入：</strong>intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3\n<strong>输出：</strong>Reference of the node with value = 8\n<strong>解释：</strong>第一个正式训练项目编号为 8 （注意，如果两个列表相交则不能为 0）。从各自的表头开始算起，链表 A 为 [4,1,8,4,5]，链表 B 为 [5,0,1,8,4,5]。在 A 中，相交节点前有 2 个节点；在 B 中，相交节点前有 3 个节点。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<p><a href=\"https://assets.leetcode.com/uploads/2018/12/13/160_example_2.png\" target=\"_blank\"><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_2.png\" /></a></p>\n\n<pre>\n<strong>输入：</strong>intersectVal&nbsp;= 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n<strong>输出：</strong>Reference of the node with value = 2\n<strong>解释：</strong>第一个正式训练项目编号为 2 （注意，如果两个列表相交则不能为 0）。从各自的表头开始算起，链表 A 为 [0,9,1,2,4]，链表 B 为 [3,2,4]。在 A 中，相交节点前有 3 个节点；在 B 中，相交节点前有 1 个节点。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;3：</strong></p>\n\n<p><a href=\"https://assets.leetcode.com/uploads/2018/12/13/160_example_3.png\" target=\"_blank\"><img alt=\"\" src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_example_3.png\" /></a></p>\n\n<pre>\n<strong>输入：</strong>intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n<strong>输出：</strong>null\n<strong>解释：</strong>两套计划完全不同，返回 null。从各自的表头开始算起，链表 A 为 [2,6,4]，链表 B 为 [1,5]。由于这两个链表不相交，所以 intersectVal 必须为 0，而 skipA 和 skipB 可以是任意值。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>如果两个链表没有交点，返回 <code>null</code>.</li>\n\t<li>在返回结果后，两个链表仍须保持原有的结构。</li>\n\t<li>可假定整个链表结构中没有循环。</li>\n\t<li>程序尽量满足 O(<em>n</em>) 时间复杂度，且仅用 O(<em>1</em>) 内存。</li>\n\t<li>本题与主站 160 题相同：<a href=\"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/\">https://leetcode-cn.com/problems/intersection-of-two-linked-lists/</a></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3734.统计目标成绩的出现次数",
        "hardRate": "EASY",
        "passRate": "52.67%",
        "problemsUrl": "https://leetcode.cn/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/solution",
        "problemsDesc": "<p>某班级考试成绩按非严格递增顺序记录于整数数组 <code>scores</code>，请返回目标成绩 <code>target</code> 的出现次数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> scores = [2, 2, 3, 4, 4, 4, 5, 6, 6, 8], target = 4\n<strong>输出:</strong> 3</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre>\n<strong>输入:</strong> scores = [1, 2, 3, 5, 7, 9], target = 6\n<strong>输出:</strong> 0</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= scores.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= scores[i]&nbsp;&lt;= 10<sup>9</sup></code></li>\n\t<li><code>scores</code>&nbsp;是一个非递减数组</li>\n\t<li><code>-10<sup>9</sup>&nbsp;&lt;= target&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>注意：</strong>本题与主站 34 题相同（仅返回值不同）：<a href=\"https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/\">https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3735.点名",
        "hardRate": "EASY",
        "passRate": "44.80%",
        "problemsUrl": "https://leetcode.cn/problems/que-shi-de-shu-zi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/que-shi-de-shu-zi-lcof/solution",
        "problemsDesc": "<p>某班级 n 位同学的学号为 0 ~ n-1。点名结果记录于升序数组 <code>records</code>。假定仅有一位同学缺席，请返回他的学号。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>records = [0,1,2,3,5]\n<strong>输出：</strong>4\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>records = [0, 1, 2, 3, 4, 5, 6, 8]\n<strong>输出：</strong>7</pre>\n\n<p>&nbsp;</p>\n\n<p><b>提示：</b></p>\n\n<p><code>1 &lt;= records.length&nbsp;&lt;= 10000</code></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3736.寻找二叉搜索树中的目标节点",
        "hardRate": "EASY",
        "passRate": "76.47%",
        "problemsUrl": "https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof/solution",
        "problemsDesc": "<p>某公司组织架构以二叉搜索树形式记录，节点值为处于该职位的员工编号。请返回第 <code>cnt</code> 大的员工编号。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1695101634-kzHKZW-image.png\" style=\"height: 281px; width: 500px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [7, 3, 9, 1, 5], cnt = 2\n       7\n      / \\\n     3   9\n    / \\\n   1   5\n<strong>输出：</strong>7\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1695101636-ESZtLa-image.png\" style=\"height: 281px; width: 500px;\" /></p>\n\n<pre>\n<strong>输入:</strong> root = [10, 5, 15, 2, 7, null, 20, 1, null, 6, 8], cnt = 4\n       10\n      / \\\n     5   15\n    / \\    \\\n   2   7    20\n  /   / \\ \n 1   6   8\n<strong>输出:</strong> 8</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>1 ≤ cnt&nbsp;≤ 二叉搜索树元素个数</li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3737.计算二叉树的深度",
        "hardRate": "EASY",
        "passRate": "79.27%",
        "problemsUrl": "https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof/solution",
        "problemsDesc": "<p>某公司架构以二叉树形式记录，请返回该公司的层级数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1695101942-FSrxqu-image.png\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1, 2, 2, 3, null, null, 5, 4, null, null, 4]\n<strong>输出: </strong>4\n<strong>解释: </strong>上面示例中的二叉树的最大深度是 4，沿着路径 1 -&gt; 2 -&gt; 3 -&gt; 4 或 1 -&gt; 2 -&gt; 5 -&gt; 4 到达叶节点的最长路径上有 4 个节点。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>节点总数 &lt;= 10000</code></li>\n</ul>\n\n<p>注意：本题与主站 104&nbsp;题相同：<a href=\"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/\">https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3738.判断是否为平衡二叉树",
        "hardRate": "EASY",
        "passRate": "59.45%",
        "problemsUrl": "https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof/solution",
        "problemsDesc": "<p>输入一棵二叉树的根节点，判断该树是不是平衡二叉树。如果某二叉树中任意节点的左右子树的深度相差不超过1，那么它就是一棵平衡二叉树。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>root = [3,9,20,null,null,15,7]\n<strong>输出：</strong>true \n<strong>解释：</strong>如下图\n</pre>\n\n<p><img alt=\"\" src=\"https://pic.leetcode.cn/1695102431-vbmWJn-image.png\" style=\"height: 281px; width: 500px;\" /><br />\n<br />\n<strong>示例 2：</strong></p>\n\n<pre>\n输入：root = [1,2,2,3,3,null,null,4,4]\n输出：false\n解释：如下图\n</pre>\n<img alt=\"\" src=\"https://pic.leetcode.cn/1695102434-WlaxCo-image.png\" style=\"height: 281px; width: 500px;\" />\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= 树的结点个数 &lt;= 10000</code></li>\n</ul>\n\n<p>注意：本题与主站 110&nbsp;题相同：<a href=\"https://leetcode-cn.com/problems/balanced-binary-tree/\">https://leetcode-cn.com/problems/balanced-binary-tree/</a></p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3739.撞色搭配",
        "hardRate": "MEDIUM",
        "passRate": "68.83%",
        "problemsUrl": "https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/solution",
        "problemsDesc": "<p>整数数组 <code>sockets</code> 记录了一个袜子礼盒的颜色分布情况，其中 <code>sockets[i]</code> 表示该袜子的颜色编号。礼盒中除了一款撞色搭配的袜子，每种颜色的袜子均有两只。请设计一个程序，在时间复杂度 O(n)，空间复杂度O(1) 内找到这双撞色搭配袜子的两个颜色编号。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>sockets = [4, 5, 2, 4, 6, 6]\n<strong>输出：</strong>[2,5] 或 [5,2]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>sockets = [1, 2, 4, 1, 4, 3, 12, 3]\n<strong>输出：</strong>[2,12] 或 [12,2]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= sockets.length &lt;= 10000</code></li>\n</ul>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3740.训练计划 VI",
        "hardRate": "MEDIUM",
        "passRate": "80.59%",
        "problemsUrl": "https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof/solution",
        "problemsDesc": "<p>教学过程中，教练示范一次，学员跟做三次。该过程被混乱剪辑后，记录于数组 <code>actions</code>，其中 <code>actions[i]</code> 表示做出该动作的人员编号。请返回教练的编号。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>actions = [5, 7, 5, 5]\n<strong>输出：</strong>7\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>actions = [12, 1, 6, 12, 6, 12, 6]\n<strong>输出：</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= actions.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= actions[i] &lt; 2^31</code></li>\n</ul>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3741.查找总价格为目标值的两个商品",
        "hardRate": "EASY",
        "passRate": "67.84%",
        "problemsUrl": "https://leetcode.cn/problems/he-wei-sde-liang-ge-shu-zi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/he-wei-sde-liang-ge-shu-zi-lcof/solution",
        "problemsDesc": "<p>购物车内的商品价格按照升序记录于数组 <code>price</code>。请在购物车中找到两个商品的价格总和刚好是 <code>target</code>。若存在多种情况，返回任一结果即可。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>price = [3, 9, 12, 15], target = 18\n<strong>输出：</strong>[3,15] 或者 [15,3]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>price = [8, 21, 27, 34, 52, 66], target = 61\n<strong>输出：</strong>[27,34] 或者 [34,27]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= price.length &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= price[i] &lt;= 10^6</code></li>\n\t<li><code>1 &lt;= target &lt;= 2*10^6</code></li>\n</ul>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3742.文件组合",
        "hardRate": "EASY",
        "passRate": "70.57%",
        "problemsUrl": "https://leetcode.cn/problems/he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof/solution",
        "problemsDesc": "<p>待传输文件被切分成多个部分，按照原排列顺序，每部分文件编号均为一个 <strong>正整数</strong>（至少含有两个文件）。传输要求为：连续文件编号总和为接收方指定数字 <code>target</code> 的所有文件。请返回所有符合该要求的文件传输组合列表。</p>\n\n<p><strong>注意</strong>，返回时需遵循以下规则：</p>\n\n<ul>\n\t<li>每种组合按照文件编号 <strong>升序</strong> 排列；</li>\n\t<li>不同组合按照第一个文件编号 <strong>升序</strong> 排列。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>target = 12\n<strong>输出：</strong>[[3, 4, 5]]\n<strong>解释：</strong>在上述示例中，存在一个连续正整数序列的和为 12，为 [3, 4, 5]。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>target = 18\n<strong>输出：</strong>[[3,4,5,6],[5,6,7]]\n<strong>解释：</strong>在上述示例中，存在两个连续正整数序列的和分别为 18，分别为 [3, 4, 5, 6] 和 [5, 6, 7]。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>提示：</b></p>\n\n<ul>\n\t<li><code>1 &lt;= target &lt;= 10^5</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3743.字符串中的单词反转",
        "hardRate": "EASY",
        "passRate": "44.99%",
        "problemsUrl": "https://leetcode.cn/problems/fan-zhuan-dan-ci-shun-xu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/fan-zhuan-dan-ci-shun-xu-lcof/solution",
        "problemsDesc": "<p>你在与一位习惯从右往左阅读的朋友发消息，他发出的文字顺序都与正常相反但单词内容正确，为了和他顺利交流你决定写一个转换程序，把他所发的消息 <code>message</code> 转换为正常语序。</p>\n\n<p>注意：输入字符串 <code>message</code> 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> message = \"<code>the sky is blue</code>\"\n<strong>输出:&nbsp;</strong>\"<code>blue is sky the</code>\"\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入:</strong> message = \" &nbsp;hello world! &nbsp;\"\n<strong>输出:&nbsp;</strong>\"world! hello\"\n<strong>解释: </strong>输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入:</strong> message = \"a good &nbsp; example\"\n<strong>输出:&nbsp;</strong>\"example good a\"\n<strong>解释: </strong>如果两个单词间有多余的空格，将反转后单词间的空格减少到只含一个。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= message.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>message</code> 中包含英文大小写字母、空格和数字</li>\n\t<li><code>message</code> 中至少有一个单词</li>\n\t<li>&nbsp;</li>\n</ul>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>本题与主站 151 题相同：<a href=\"https://leetcode-cn.com/problems/reverse-words-in-a-string/\">https://leetcode-cn.com/problems/reverse-words-in-a-string/</a></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3744.动态口令",
        "hardRate": "EASY",
        "passRate": "85.40%",
        "problemsUrl": "https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/solution",
        "problemsDesc": "<p>某公司门禁密码使用动态口令技术。初始密码为字符串 <code>password</code>，密码更新均遵循以下步骤：</p>\n\n<ul>\n\t<li>设定一个正整数目标值 <code>target</code></li>\n\t<li>将 <code>password</code> 前 <code>target</code> 个字符按原顺序移动至字符串末尾</li>\n</ul>\n\n<p>请返回更新后的密码字符串。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入:</strong> password = \"s3cur1tyC0d3\", target = 4\n<strong>输出:</strong> \"r1tyC0d3s3cu\"\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入:</strong> password = \"lrloseumgh\", target = 6\n<strong>输出:&nbsp;</strong>\"umghlrlose\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target&nbsp;&lt; password.length &lt;= 10000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3745.望远镜中最高的海拔",
        "hardRate": "HARD",
        "passRate": "44.59%",
        "problemsUrl": "https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/solution",
        "problemsDesc": "<p>科技馆内有一台虚拟观景望远镜，它可以用来观测特定纬度地区的地形情况。该纬度的海拔数据记于数组 <code>heights</code> ，其中 <code>heights[i]</code> 表示对应位置的海拔高度。请找出并返回望远镜视野范围 <code>limit</code> 内，可以观测到的最高海拔值。</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>heights = [14,2,27,-5,28,13,39], limit = 3\n<strong>输出：</strong>[27,27,28,28,39]\n<strong>解释：</strong>\n  滑动窗口的位置                最大值\n---------------               -----\n[14 2 27] -5 28 13 39          27\n14 [2 27 -5] 28 13 39          27\n14 2 [27 -5 28] 13 39          28\n14 2 27 [-5 28 13] 39          28\n14 2 27 -5 [28 13 39]          39</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<p>你可以假设输入总是有效的，在输入数组不为空的情况下：</p>\n\n<ul>\n\t<li><code>1 &lt;= limit &lt;= heights.length</code></li>\n\t<li><code>-10000 &lt;= heights[i] &lt;= 10000</code></li>\n</ul>\n\n<p>注意：本题与主站 239 题相同：<a href=\"https://leetcode-cn.com/problems/sliding-window-maximum/\">https://leetcode-cn.com/problems/sliding-window-maximum/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3746.设计自助结算系统",
        "hardRate": "MEDIUM",
        "passRate": "47.81%",
        "problemsUrl": "https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof/solution",
        "problemsDesc": "<p>请设计一个自助结账系统，该系统需要通过一个队列来模拟顾客通过购物车的结算过程，需要实现的功能有：</p>\n\n<ul>\n\t<li><code>get_max()</code>：获取结算商品中的最高价格，如果队列为空，则返回 -1</li>\n\t<li><code>add(value)</code>：将价格为 <code>value</code> 的商品加入待结算商品队列的尾部</li>\n\t<li><code>remove()</code>：移除第一个待结算的商品价格，如果队列为空，则返回 -1</li>\n</ul>\n\n<p>注意，为保证该系统运转高效性，以上函数的均摊时间复杂度均为 O(1)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n输入: \n[\"Checkout\",\"add\",\"add\",\"get_max\",\"remove\",\"get_max\"]\n[[],[4],[7],[],[],[]]\n\n输出: [null,null,null,7,4,7]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n输入: \n[\"Checkout\",\"remove\",\"get_max\"]\n[[],[],[]]\n\n输出: [null,-1,-1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= get_max, add, remove 的总操作数&nbsp;&lt;= 10000</code></li>\n\t<li><code>1 &lt;= value &lt;= 10^5</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3747.统计结果概率",
        "hardRate": "MEDIUM",
        "passRate": "57.82%",
        "problemsUrl": "https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof/solution",
        "problemsDesc": "<p>你选择掷出 <code>num</code> 个色子，请返回所有点数总和的概率。</p>\n\n<p>你需要用一个浮点数数组返回答案，其中第 <code>i</code> 个元素代表这 <code>num</code> 个骰子所能掷出的点数集合中第 <code>i</code> 小的那个的概率。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 3\n<strong>输出：</strong>[0.00463,0.01389,0.02778,0.04630,0.06944,0.09722,0.11574,0.12500,0.12500,0.11574,0.09722,0.06944,0.04630,0.02778,0.01389,0.00463]\n</pre>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 5\n<strong>输出:</strong>[0.00013,0.00064,0.00193,0.00450,0.00900,0.01620,0.02636,0.03922,0.05401,0.06944,0.08372,0.09452,0.10031,0.10031,0.09452,0.08372,0.06944,0.05401,0.03922,0.02636,0.01620,0.00900,0.00450,0.00193,0.00064,0.00013]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 11</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3748.文物朝代判断",
        "hardRate": "EASY",
        "passRate": "45.03%",
        "problemsUrl": "https://leetcode.cn/problems/bu-ke-pai-zhong-de-shun-zi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/bu-ke-pai-zhong-de-shun-zi-lcof/solution",
        "problemsDesc": "<p>展览馆展出来自 13 个朝代的文物，每排展柜展出 5 个文物。某排文物的摆放情况记录于数组 <code>places</code>，其中 <code>places[i]</code> 表示处于第 <code>i</code> 位文物的所属朝代编号。其中，编号为 0 的朝代表示未知朝代。请判断并返回这排文物的所属朝代编号是否能够视为连续的五个朝代（如遇未知朝代可算作连续情况）。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>places = [0, 6, 9, 0, 7]\n<strong>输出：</strong>True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;2：</strong></p>\n\n<pre>\n<strong>输入：</strong>places = [7, 8, 9, 10, 11]\n<strong>输出：</strong>True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>places.length = 5</code></li>\n\t<li><code>0 &lt;= places[i] &lt;= 13</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3749.破冰游戏",
        "hardRate": "EASY",
        "passRate": "65.11%",
        "problemsUrl": "https://leetcode.cn/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof/solution",
        "problemsDesc": "<p>社团共有 <code>num</code>&nbsp;位成员参与破冰游戏，编号为 <code>0 ~ num-1</code>。成员们按照编号顺序围绕圆桌而坐。社长抽取一个数字 <code>target</code>，从 0 号成员起开始计数，排在第 <code>target</code> 位的成员离开圆桌，且成员离开后从下一个成员开始计数。请返回游戏结束时最后一位成员的编号。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 7, target = 4\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 12, target = 5\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 10^5</code></li>\n\t<li><code>1 &lt;= target&nbsp;&lt;= 10^6</code></li>\n</ul>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    },
    {
        "problemsName": " 3750.买卖芯片的最佳时机",
        "hardRate": "MEDIUM",
        "passRate": "62.58%",
        "problemsUrl": "https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof/",
        "solutionsUrl": "https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof/solution",
        "problemsDesc": "<p>数组 <code>prices</code> 记录了某芯片近期的交易价格，其中 <code>prices[i]</code> 表示的 <code>i</code> 天该芯片的价格。你只能选择 <strong>某一天</strong> 买入芯片，并选择在 <strong>未来的某一个不同的日子</strong> 卖出该芯片。请设计一个算法计算并返回你从这笔交易中能获取的最大利润。</p>\n\n<p>如果你不能获取任何利润，返回 0。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>prices = [3, 6, 2, 9, 8, 5]\n<strong>输出：</strong>7\n<strong>解释：</strong>在第 3 天（芯片价格 = 2）买入，在第 4 天（芯片价格 = 9）卖出，最大利润 = 9 - 2 = 7。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>prices = [8, 12, 15, 7, 3, 10]\n<strong>输出：</strong>7\n<strong>解释：</strong>在第 5 天（芯片价格 = 3）买入，在第 6 天（芯片价格 = 10）卖出，最大利润 = 10 - 3 = 7。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>提示：</b></p>\n\n<ul>\n\t<li><code>0 &lt;= prices.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= prices[i] &lt;= 10^4</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>注意：</strong>本题与主站 121 题相同：<a href=\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/\">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/</a></p>\n\n<p>&nbsp;</p>\n",
        "isPlus": false
    }
]